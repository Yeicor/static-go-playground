on: push
jobs:
  build-wasm-exec:
    runs-on: ubuntu-latest
    name: Build wasm_exec.js
    steps:
      - uses: actions/checkout@v3

      # Setup dependencies
      - uses: actions/setup-go@v3
        with:
          go-version: '1.20'
      - uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'yarn'
          cache-dependency-path: frontend/yarn.lock

      - name: Build wasm_exec.js
        run: |
          make wasm_exec
          mkdir -p emptyDeployment
          touch emptyDeployment/index.html

      - name: Clear previous deployment to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        if: github.ref == 'refs/heads/main' && github.actor != 'dependabot[bot]' # Only when working on main branch
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: emptyDeployment
          commit_message: "Clear previous deployment to GitHub Pages"

      - name: Publish to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        if: github.ref == 'refs/heads/main' && github.actor != 'dependabot[bot]' # Only when working on main branch
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: dist-wasm_exec
          destination_dir: wasm_exec
          commit_message: "wasm_exec: ${{ github.event.head_commit.message }}"

  build-and-deploy:
    runs-on: ubuntu-latest
    needs: [ build-wasm-exec ]
    strategy:
      matrix:
        go: [ '1.13', '1.14', '1.15', '1.16', '1.17', '1.18', '1.20' ]
        # Go 1.19 had this issue when building cmd/go for js/wasm: https://github.com/golang/go/issues/54219 (fixed in Go 1.20)
    name: "Build Go ${{ matrix.go }}"
    steps:
      - uses: actions/checkout@v3

      # Setup dependencies
      - uses: actions/setup-go@v3
        with:
          go-version: ${{ matrix.go }}
          stable: false
      - uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'yarn'
          cache-dependency-path: frontend/yarn.lock
      - name: Install binaryen (wasm-opt tool)
        if: ${{ matrix.go == '1.20' }} # Only optimize the builds on latest Go (takes a while)
        run: |
          set -e
          curl -L https://github.com/WebAssembly/binaryen/releases/download/version_111/binaryen-version_111-x86_64-linux.tar.gz | tar xzf -
          echo `pwd`/binaryen-*/bin | tee /dev/stderr >> $GITHUB_PATH

      - name: Build compiler and frontend
        run: make

      - name: Write GitHub Pages readme
        if: ${{ matrix.go == '1.20' && github.ref == 'refs/heads/main' && github.actor != 'dependabot[bot]' }} # Only prepare GitHub pages for latest Go version and main branch
        run: |
          cat >dist/README.md <<EOF
          # Production build (${{github.ref_name}})
          
          To deploy on your own static web server, you just need to copy these files as needed:
          
          - Full app: The files in the root folder (without any subfolders or .nojekyll).
          - [wasm_exec.js](wasm_exec/wasm_exec.js): The subfolder wasm_exec is the standalone wasm_exec.js demo.
          
          The hosted version of the full app is available at https://${GITHUB_REPOSITORY}.github.io/ and the 
          wasm_exec.js standalone demo is available at https://${GITHUB_REPOSITORY}.github.io/wasm_exec/.
          
          \`\`\`
          Date: $(date +%F)
          Git revision: $(git rev-parse HEAD)
          \`\`\`
          EOF

      - uses: peaceiris/actions-gh-pages@v3
        if: ${{ matrix.go == '1.20' && github.ref == 'refs/heads/main' && github.actor != 'dependabot[bot]' }} # Only prepare GitHub pages for latest Go version and main branch
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: dist
          keep_files: true  # Keep wasm_exec/* files
          commit_message: "Full app: ${{ github.event.head_commit.message }}"
